Вступление

Теперь, когда вы, наконец, поняли основы библиотеки MiniLibX,
мы начнем с рисования крошечной анимации в окне.
Для этого мы будем использовать две новые функции, а именно mlx_loop и mlx_loop_hook.

Циклы - это функция MINILIBX, где она будет продолжать вызывать ваш хук,
зарегистрированный в mlx_loop_hook, для рендеринга новых кадров,
которые вы, очевидно, должны передать в окно самостоятельно.

Hooking into loops

Чтобы инициировать цикл, мы вызываем функцию mlx_loop с экземпляром mlx
в качестве единственного параметра, взгляните:

#include <mlx.h>

int	main(void)
{
	void	*mlx;

	mlx = mlx_init();
	mlx_loop(mlx);
}

Конечно, это ничего не даст, так как у нас не зарегистрирован крючок петли(loop hook),
поэтому мы не сможем ничего записать в наш фрейм.

Для этого вам придется создать новое окно и использовать мутации,
которые мы описали в главе "Приступая_к_работе". Мы предполагаем,
что вы хорошо разбираетесь в этом и что вы сможете соответствующим образом
передать свои параметры. Пример его версии на доске может выглядеть следующим образом:

#include <mlx.h>

int	render_next_frame(void *YourStruct);

int	main(void)
{
	void	*mlx;

	mlx = mlx_init();
	mlx_loop_hook(mlx, render_next_frame, YourStruct);
	mlx_loop(mlx);
}

Теперь для каждого требуемого кадра он будет вызывать функцию render_next_frame
с параметром YOURSTRUCT. Это будет сохраняться при нескольких вызовах,
если это указатель, так что используйте это в своих интересах!

Проверьте свои навыки!

Теперь, когда вы понимаете, как зарегистрировать собственную функцию визуализации,
мы предлагаем вам создать следующие средства визуализации:

 - Визуализируйте движущуюся радугу, которая меняет все цвета
 (экран становится красным, становится зеленым, а затем становится синим,
 затем начинается все сначала).
 - Создайте круг, который вы можете перемещать по экрану с помощью клавиш WASD.